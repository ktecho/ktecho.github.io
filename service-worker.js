const s=location.pathname.split("/").slice(0,-1).join("/"),u=[s+"/_app/immutable/entry/app.-Yv8aCnH.js",s+"/_app/immutable/nodes/0.5MYOUDCl.js",s+"/_app/immutable/assets/0.CYYkVUYX.css",s+"/_app/immutable/assets/golden-gai-tokyo.bCcBSBh5.jpg",s+"/_app/immutable/nodes/1.caWkkrdB.js",s+"/_app/immutable/nodes/10.Jsc3fRZO.js",s+"/_app/immutable/nodes/11.KfSUZRM6.js",s+"/_app/immutable/assets/Loading.TiPKjp_x.css",s+"/_app/immutable/nodes/12.nRLyXxOq.js",s+"/_app/immutable/nodes/13.uROozSEw.js",s+"/_app/immutable/nodes/14.J9sWcclE.js",s+"/_app/immutable/nodes/15.RqA8MYBX.js",s+"/_app/immutable/nodes/16.15SRVSHN.js",s+"/_app/immutable/nodes/17.AqhfM-aE.js",s+"/_app/immutable/nodes/18.v_ooqrLC.js",s+"/_app/immutable/nodes/2.xE9qqVGm.js",s+"/_app/immutable/assets/2.J8nPPwID.css",s+"/_app/immutable/nodes/3.Sy7N-r6v.js",s+"/_app/immutable/nodes/4.uVx20BiO.js",s+"/_app/immutable/nodes/5.Ub-xMXD-.js",s+"/_app/immutable/nodes/6.gFvkw00c.js",s+"/_app/immutable/nodes/7.ROdIc_GP.js",s+"/_app/immutable/nodes/8.j3nqvhzy.js",s+"/_app/immutable/nodes/9.sngtOG7A.js",s+"/_app/immutable/chunks/AdminActions.I174XZwO.js",s+"/_app/immutable/chunks/Chat.U49MCIs4.js",s+"/_app/immutable/chunks/Clock.o45-HYqg.js",s+"/_app/immutable/chunks/CurrencyConverter.JjeTDkRk.js",s+"/_app/immutable/chunks/Email.iMOOqnwW.js",s+"/_app/immutable/chunks/Github.tAPxVNQX.js",s+"/_app/immutable/chunks/Minus.b0sP7xD2.js",s+"/_app/immutable/chunks/Nip05Checkmark.WfrkC49G.js",s+"/_app/immutable/assets/PaymentWidget.FnI4XiCL.css",s+"/_app/immutable/chunks/PaymentWidget.crMBCL88.js",s+"/_app/immutable/chunks/PrivateKeyInfo.crg3tdN3.js",s+"/_app/immutable/chunks/Product.Bi7yVyUB.js",s+"/_app/immutable/chunks/ProductCardBrowser.iBw0bK18.js",s+"/_app/immutable/assets/ProductModal.VBrRu6-T.css",s+"/_app/immutable/chunks/ProductModal.a8_RX8o4.js",s+"/_app/immutable/chunks/Quantity.YRyvFZb-.js",s+"/_app/immutable/chunks/Search.gdWHcN48.js",s+"/_app/immutable/chunks/SendMessage.U2vh_8ek.js",s+"/_app/immutable/chunks/ShippingOptions.5yoMSw42.js",s+"/_app/immutable/chunks/ShoppingCart.zvU4lHiI.js",s+"/_app/immutable/chunks/ShowExternalIdentities.fuldahui.js",s+"/_app/immutable/chunks/StallsBrowser.QVo8m-DK.js",s+"/_app/immutable/chunks/Store.CEFXwr6Z.js",s+"/_app/immutable/chunks/Title-h1.ksZwEtxJ.js",s+"/_app/immutable/chunks/VerificationMark.95_-Gkx8.js",s+"/_app/immutable/chunks/badge_placeholder.tdxaBMwY.js",s+"/_app/immutable/chunks/index.QlrTg0iE.js",s+"/_app/immutable/chunks/index.eLAHt3dB.js",s+"/_app/immutable/chunks/preload-helper.0HuHagjb.js",s+"/_app/immutable/chunks/profile_picture_placeholder.0d-yZyxG.js",s+"/_app/immutable/chunks/scheduler.2vmdsppc.js",s+"/_app/immutable/chunks/shopping.HYDPEdxb.js",s+"/_app/immutable/chunks/singletons.PqOxICUJ.js",s+"/_app/immutable/chunks/stores._GSMfgpH.js",s+"/_app/immutable/chunks/utils.FkBaGfnY.js",s+"/_app/immutable/entry/start.XOqRqHGw.js",s+"/_app/immutable/chunks/chart.es.z6gn-Snz.js",s+"/_app/immutable/chunks/chartjs-plugin-datalabels.es.XSlMRiVN.js",s+"/_app/immutable/chunks/tw-elements.es.min.hbzFXnQ4.js"],c=[s+"/.well-known/assetlinks.json",s+"/.well-known/nostr.json",s+"/app.webmanifest",s+"/badges/og.png",s+"/badges/skin-in-the-game.png",s+"/badges/tester.png",s+"/config-example.json",s+"/config-pm.json",s+"/images/Plebeian_Logo_OpenGraph.png",s+"/images/icons/android-chrome-192x192.png",s+"/images/icons/android-chrome-512x512.png",s+"/images/icons/android-chrome-96x96.png",s+"/images/icons/apple-touch-icon.png",s+"/images/icons/browserconfig.xml",s+"/images/icons/favicon-16x16.png",s+"/images/icons/favicon-32x32.png",s+"/images/icons/favicon.ico",s+"/images/icons/mstile-150x150.png",s+"/images/icons/safari-pinned-tab.svg",s+"/images/logo.jpg",s+"/images/logo.png",s+"/images/screenshots/screenshot_homepage.jpg",s+"/images/screenshots/screenshot_market_square.jpg",s+"/team/bekka.jpg",s+"/team/bitkoyinowsky.jpg",s+"/team/chiefmonkey.jpg",s+"/team/hodlonaut.jpg",s+"/team/ibz.jpg",s+"/team/luismiguel.jpg",s+"/team/mtc.jpg"],o="1703933146465",p=`cache-${o}`,m=[...u,...c];self.addEventListener("install",a=>{async function e(){await(await caches.open(p)).addAll(m)}a.waitUntil(e())});self.addEventListener("activate",a=>{async function e(){for(const t of await caches.keys())t!==p&&await caches.delete(t)}a.waitUntil(e())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.url.includes("nostr.json"))return;async function e(){const t=new URL(a.request.url),n=await caches.open(p);if(m.includes(t.pathname))return n.match(a.request);try{const i=await fetch(a.request);return i.status===200&&!a.request.url.startsWith("chrome-extension")&&n.put(a.request,i.clone()),i}catch{return n.match(a.request)}}a.respondWith(e())});
